package com.trungndz.classroombook.entities;
// Generated 14-Dec-2018 15:20:34 by Hibernate Tools 4.3.5.Final

import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonUnwrapped;

/**
 * Employees generated by hbm2java
 */
@Entity
@Table(name = "employees", schema = "public", uniqueConstraints = @UniqueConstraint(columnNames = "email"))
public class Employee implements java.io.Serializable {

	private int idemp;
	private Position position;
	private String nameemp;
	private String email;
	private List<Roomsession> roomsessionsForCreator;
	private List<Roomsession> roomsessionsForSubscriber;
	private List<Roomsession> roomsessionsForApprover;

	public Employee() {
	}

	public Employee(int idemp, Position position) {
		this.idemp = idemp;
		this.position = position;
	}

	public Employee(int idemp, Position position, String nameemp, String email,
			List<Roomsession> roomsessionsForCreator, List<Roomsession> roomsessionsForSubscriber,
			List<Roomsession> roomsessionsForApprover) {
		this.idemp = idemp;
		this.position = position;
		this.nameemp = nameemp;
		this.email = email;
		this.roomsessionsForCreator = roomsessionsForCreator;
		this.roomsessionsForSubscriber = roomsessionsForSubscriber;
		this.roomsessionsForApprover = roomsessionsForApprover;
	}

	@Id

	@Column(name = "idemp", unique = true, nullable = false)
	public int getIdemp() {
		return this.idemp;
	}

	public void setIdemp(int idemp) {
		this.idemp = idemp;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JsonBackReference
	@JsonUnwrapped
	@JoinColumn(name = "idposition", nullable = false)
	public Position getPosition() {
		return this.position;
	}

	public void setPosition(Position position) {
		this.position = position;
	}

	@Column(name = "nameemp", length = 50)
	public String getNameemp() {
		return this.nameemp;
	}

	public void setNameemp(String nameemp) {
		this.nameemp = nameemp;
	}

	@Column(name = "email", unique = true, length = 50)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "creator")
	@JsonBackReference
	public List<Roomsession> getRoomsessionsForCreator() {
		return this.roomsessionsForCreator;
	}

	public void setRoomsessionsForCreator(List<Roomsession> roomsessionsForCreator) {
		this.roomsessionsForCreator = roomsessionsForCreator;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "subscriber")
	@JsonBackReference
	public List<Roomsession> getRoomsessionsForSubscriber() {
		return this.roomsessionsForSubscriber;
	}

	public void setRoomsessionsForSubscriber(List<Roomsession> roomsessionsForSubscriber) {
		this.roomsessionsForSubscriber = roomsessionsForSubscriber;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "approver")
	@JsonBackReference
	public List<Roomsession> getRoomsessionsForApprover() {
		return this.roomsessionsForApprover;
	}

	public void setRoomsessionsForApprover(List<Roomsession> roomsessionsForApprover) {
		this.roomsessionsForApprover = roomsessionsForApprover;
	}

}
